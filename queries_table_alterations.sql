------------------------------------------------------------------------------------
---- NOTE:                                                                      ----
---- All the queries below are generated by DatabaseSchema class methods        ----
---- based on the arguments passed to the methods from the main programme.      ----
---- Value of VARCHAR(?) is calculated dynamically by the methods to get        ----
---- the maximum length of the text in the column.                              ----
------------------------------------------------------------------------------------

-- #### TASK 1: Change the data types in the orders_table ####
ALTER TABLE orders_table ALTER COLUMN "date_uuid" TYPE UUID USING date_uuid::UUID
ALTER TABLE orders_table ALTER COLUMN "user_uuid" TYPE UUID USING user_uuid::UUID
ALTER TABLE orders_table ALTER COLUMN "card_number" TYPE VARCHAR(19)
ALTER TABLE orders_table ALTER COLUMN "store_code" TYPE VARCHAR(12)
ALTER TABLE orders_table ALTER COLUMN "product_code" TYPE VARCHAR(11)
ALTER TABLE orders_table ALTER COLUMN "product_quantity" TYPE smallint


-- #### TASK 2: Change the data types in the dim_users table ####
ALTER TABLE dim_users ALTER COLUMN "first_name" TYPE varchar(255)
ALTER TABLE dim_users ALTER COLUMN "last_name" TYPE varchar(255)
ALTER TABLE dim_users ALTER COLUMN "date_of_birth" TYPE date
ALTER TABLE dim_users ALTER COLUMN "country_code" TYPE VARCHAR(3)
ALTER TABLE dim_users ALTER COLUMN "user_uuid" TYPE UUID USING user_uuid::UUID
ALTER TABLE dim_users ALTER COLUMN "join_date" TYPE date


-- #### TASK 3: Change the data types in the dim_store_details table ####
ALTER TABLE dim_store_details ALTER COLUMN "longitude" TYPE float
ALTER TABLE dim_store_details ALTER COLUMN "locality" TYPE varchar(255)
ALTER TABLE dim_store_details ALTER COLUMN "store_code" TYPE VARCHAR(12)
ALTER TABLE dim_store_details ALTER COLUMN "staff_numbers" TYPE smallint
ALTER TABLE dim_store_details ALTER COLUMN "opening_date" TYPE date
ALTER TABLE dim_store_details ALTER COLUMN "store_type" TYPE varchar(255)
ALTER TABLE dim_store_details ALTER COLUMN "latitude" TYPE float
ALTER TABLE dim_store_details ALTER COLUMN "country_code" TYPE VARCHAR(2)
ALTER TABLE dim_store_details ALTER COLUMN "continent" TYPE varchar(255)


-- #### TASK 4: Categorise weight range in the dim_products table ####
-- Add a new weight category column to the dim_products table
UPDATE dim_products 
SET weight_class = CASE 
    WHEN weight < 2 THEN 'Light' 
    WHEN weight >= 2 AND weight < 40 THEN 'Mid_Sized' 
    WHEN weight >= 40 AND weight < 140 THEN 'Heavy' 
    ELSE 'Truck_Required' 
END;

-- Add a new availability column to the dim_products table
ALTER TABLE dim_products ADD COLUMN IF NOT EXISTS still_available BOOLEAN
SELECT column_name FROM information_schema.columns WHERE table_name = 'dim_products' AND column_name = 'removed'
ALTER TABLE dim_products DROP COLUMN IF EXISTS removed


-- #### TASK 5: Change the data types in the dim_products table ####
ALTER TABLE dim_products ALTER COLUMN "product_price" TYPE float
ALTER TABLE dim_products ALTER COLUMN "weight" TYPE float
ALTER TABLE dim_products ALTER COLUMN "EAN" TYPE VARCHAR(17)
ALTER TABLE dim_products ALTER COLUMN "product_code" TYPE VARCHAR(11)
ALTER TABLE dim_products ALTER COLUMN "date_added" TYPE date
ALTER TABLE dim_products ALTER COLUMN "uuid" TYPE UUID USING uuid::UUID
ALTER TABLE dim_products ALTER COLUMN "still_available" TYPE boolean
ALTER TABLE dim_products ALTER COLUMN "weight_class" TYPE VARCHAR(14)


-- #### TASK 6: Change the data types in the dim_date_times table ####
ALTER TABLE dim_date_times ALTER COLUMN "month" TYPE smallint
ALTER TABLE dim_date_times ALTER COLUMN "year" TYPE smallint
ALTER TABLE dim_date_times ALTER COLUMN "day" TYPE smallint
ALTER TABLE dim_date_times ALTER COLUMN "time_period" TYPE VARCHAR(10)
ALTER TABLE dim_date_times ALTER COLUMN "date_uuid" TYPE UUID USING date_uuid::UUID


-- #### TASK 7: Change the data types in the dim_card_details table ####
ALTER TABLE dim_card_details ALTER COLUMN "card_number" TYPE VARCHAR(19)
ALTER TABLE dim_card_details ALTER COLUMN "expiry_date" TYPE VARCHAR(5)
ALTER TABLE dim_card_details ALTER COLUMN "date_payment_confirmed" TYPE date


-- #### TASK 8: Create primary keys in the dimension tables ####
ALTER TABLE dim_users ADD PRIMARY KEY (user_uuid)
ALTER TABLE dim_store_details ADD PRIMARY KEY (store_code)
ALTER TABLE dim_products ADD PRIMARY KEY (product_code)
ALTER TABLE dim_date_times ADD PRIMARY KEY (date_uuid)
ALTER TABLE dim_card_details ADD PRIMARY KEY (card_number)


-- #### TASK 9: Create foreign keys in the orders_table ####
-- remove a question mark from the card_number column
UPDATE dim_card_details SET card_number = REPLACE(card_number, '?', '') WHERE card_number LIKE '?%'

-- Add foreign keys to the orders_table
ALTER TABLE orders_table DROP CONSTRAINT IF EXISTS orders_table_dim_users_user_uuid_fkey
ALTER TABLE orders_table ADD CONSTRAINT orders_table_dim_users_user_uuid_fkey FOREIGN KEY (user_uuid) REFERENCES dim_users(user_uuid)

ALTER TABLE orders_table DROP CONSTRAINT IF EXISTS orders_table_dim_store_details_store_code_fkey
ALTER TABLE orders_table ADD CONSTRAINT orders_table_dim_store_details_store_code_fkey FOREIGN KEY (store_code) REFERENCES dim_store_details(store_code)

ALTER TABLE orders_table DROP CONSTRAINT IF EXISTS orders_table_dim_products_product_code_fkey
ALTER TABLE orders_table ADD CONSTRAINT orders_table_dim_products_product_code_fkey FOREIGN KEY (product_code) REFERENCES dim_products(product_code)

ALTER TABLE orders_table DROP CONSTRAINT IF EXISTS orders_table_dim_date_times_date_uuid_fkey
ALTER TABLE orders_table ADD CONSTRAINT orders_table_dim_date_times_date_uuid_fkey FOREIGN KEY (date_uuid) REFERENCES dim_date_times(date_uuid)

ALTER TABLE orders_table DROP CONSTRAINT IF EXISTS orders_table_dim_card_details_card_number_fkey
ALTER TABLE orders_table ADD CONSTRAINT orders_table_dim_card_details_card_number_fkey FOREIGN KEY (card_number) REFERENCES dim_card_details(card_number)